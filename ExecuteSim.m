% change the seed of the input file to generate different y-z planes turbulence by turbsim
% or by Mann turbulence generator
% 
% Usage: ExecuteSim(ConfigParameters)
% 
% 
% Input: Input: Configuration parameters, generated by TurbConfig.m
% 
% 
% 
% Output: [SimulationNames3D,ConfigParameters, ErrorSat, ErrorMessage] 
%         ConfigParameters: a struct contains all configuration parameters
%         ErrorSat: 1 for error detected, 0 for no error
%         ErrorMessage: the error message, written as string
%         SimulationNames3D: independent names of the 3D turbulence
% 
% 
% Modified:
% 
% 
% ToDo: 
% 
% Created:  Feng Guo 19-Nov 2020 Flensburg University of Applied Sciences

function  [SimulationNames3D,ConfigParameters, ErrorSat, ErrorMessage] =  ExecuteSim(ConfigParameters)


% Model Specific lines used for Turbsim
if ConfigParameters.Model == 'Kaimal'
   
    Seeds                           = ConfigParameters.Seeds;
    fileDir                         = ConfigParameters.fileDir ;
    Uref                            = ConfigParameters.Uref ;
    exeName                         = ConfigParameters.exeName;
    Class                           = ConfigParameters.Class;      %IEC turbulence class  IEC-61400
    TurbModel                       = ConfigParameters.TurbModel;   %IEC turbulence model NTM or ETM
    saveDir                         = ConfigParameters.saveDir;
    InputFileName                   = ConfigParameters.InputFileName;  % template file input file name
    SimulationNames3D               = cell(length(Seeds),1);
    CurrentDir                      = cd;
    %ConfigParameters.SimulationName4D  = ['Kaimal_URef_' num2str(Uref) '_' TurbModel  '_Class_' Class '_4D'];
    
    
    %% loop over to execute TurbSim
    for i = 1:length(Seeds)
        SimulationNames3D{i} = ['Kaimal_URef_' num2str(Uref) '_' TurbModel  '_Class_' Class '_Seed_' num2str(Seeds(i))];
        
        identifier = 'RandSeed1';
        ManipulateFASTinput([ConfigParameters.fileDir,InputFileName], identifier, num2str(Seeds(i)))
        
        % rename the inp file
        copyfile([ConfigParameters.fileDir InputFileName], [ConfigParameters.fileDir SimulationNames3D{i} '.inp']);
        
        % Time management ----
        disp(['Generating ',SimulationNames3D{i}])
        
        
        
        try
            % 2.2.2 run TurbSim in InitFilesDir
            if ~exist([saveDir SimulationNames3D{i} '.wnd'],'file') && ~exist([saveDir SimulationNames3D{i} '.btw'],'file')
                cd(fileDir)
                dos([exeName ' ' SimulationNames3D{i} '.inp']);
                cd(CurrentDir)
                
            else
                disp(['The following simulation results already exist:',SimulationNames3D{i}])
            end
            
                     
            % 2.2.9 Move files to ResultsFilesDir if different from InitFilesDir
            
            movefile([fileDir,SimulationNames3D{i},'*'],[saveDir])
            ConfigParameters.SimulationName4D  = SimulationNames3D{1};
            
        catch exception
            disp(exception.message)
            cd(CurrentDir)
        end
        
        
        
    end


    

    ErrorSat = 0 ;
    ErrorMessage = 'No error detected!';

    % Model Specific lines used for Mann turbulence generator
elseif ConfigParameters.Model == 'Mann' % baustelle
    %          Seeds                           = ConfigParameters.Seeds
    %          alphaEps                        = ConfigParameters.alphaEps
    %          LengthScale                     = ConfigParameters.LengthScale
    %          gamma                           = ConfigParameters.gamma
    %          Nx                              = ConfigParameters.Nx
    %          Ny                              = ConfigParameters.Ny
    %          Nz                              = ConfigParameters.Nz
    %          dx                              = ConfigParameters.dx
    %          dy                              = ConfigParameters.dy
    %          dz                              = ConfigParameters.dz
    %          HighComp                        = ConfigParameters.HighComp
    %          fileDir                         = ConfigParameters.fileDir
    %          SimulationNames3D               = list(range(len(Seeds)))
    %          writecontent                    = list(range(len(Seeds)))
    %          exeName                         = ConfigParameters.exeName
    %          saveDir                         = ConfigParameters.saveDir
    
    
    %          %% loop over to execute Mann Turb generator
    %          for i in range(len(Seeds)):
    %              SimulationNames3D[i] = 'Mann_'+str(alphaEps).replace('.','d')+\
    %                                     '_'+str(LengthScale).replace('.','d')+\
    %                                     '_'+str(gamma).replace('.','d')+\
    %                                     '_'+'seed'+str(Seeds[i])
    %
    %              %Modify IO file for Mann Turb generator
    %              writecontent       = exeName+' '+SimulationNames3D[i]+' '\
    %                                   +str(alphaEps)+' '+str(LengthScale)+' '\
    %                                   +str(gamma)+' '+str(Seeds[i])+' '\
    %                                   +str(Nx)+' '+str(Ny)+' '\
    %                                   +str(Nz)+' '+str(dx)+' '\
    %                                   +str(dy)+' '+str(dz)+' '+HighComp
    %
    %              bat_object  = open(fileDir+'run.bat',"w")
    %              bat_object.write(writecontent)
    %              bat_object.close()
    %
    %
    %              % check whether file already exist before running
    %              u_file = saveDir+'\\'+SimulationNames3D[i]+'_u.bin'
    %              v_file = saveDir+'\\'+SimulationNames3D[i]+'_v.bin'
    %              w_file = saveDir+'\\'+SimulationNames3D[i]+'_w.bin'
    %
    %              if os.path.isfile(u_file)&os.path.isfile(v_file)&os.path.isfile(w_file):
    %                 print('Turbulence box with seed = ' +str(Seeds[i])+ ' already exists, '+str(len(Seeds)-i-1)+' seeds left.')
    %                 ErrorSat = 0
    %                 ErrorMessage = 'No error detected!'
    %              else:
    %
    %                  % call exe
    %                  os.chdir(fileDir)
    %                  print('Simulating with Mann Turbulence Generator')
    %                  SimState = subprocess.call(fileDir+'run.bat')
    %                  if SimState == 0 :
    %                     ErrorSat = 0
    %                     ErrorMessage = 'No error detected!'
    %                     print('Turbulence simulation with seed = '+str(Seeds[i])+' finished, '+str(len(Seeds)-i-1)+' seeds left.')
    %
    %                     % move simulated results to the target folder
    %                     shutil.move(SimulationNames3D[i]+'_u.bin', saveDir)
    %                     shutil.move(SimulationNames3D[i]+'_v.bin', saveDir)
    %                     shutil.move(SimulationNames3D[i]+'_w.bin', saveDir)
    %
    %                  else:
    %                     print("Turbulence simulation failed, check the error by running the 'run.bat' manually")
    %                     ErrorSat = 1
    %                     ErrorMessage = "Turbulence simulation failed, check the error by running the 'run.bat' manually"
    %                  os.chdir(os.path.abspath(os.path.dirname(os.getcwd())))   %back to upper folder
    %
else
    ErrorSat = 1 ;
    ErrorMessage = 'Turbulence model undefined!';
    error(ErrorMessage)
end




%% backup
    %Modify IO file for Mann Turb generator
    %              writecontent       = exeName+' '+SimulationNames3D[i]+' '\
    %                                   +str(alphaEps)+' '+str(LengthScale)+' '\
    %                                   +str(gamma)+' '+str(Seeds[i])+' '\
    %                                   +str(Nx)+' '+str(Ny)+' '\
    %                                   +str(Nz)+' '+str(dx)+' '\
    %                                   +str(dy)+' '+str(dz)+' '+HighComp
    %
    %              bat_object  = open(fileDir+'run.bat',"w")
    %              bat_object.write(writecontent)
    %              bat_object.close()
    %
    %
    %              % check whether file already exist before running
    %              u_file = saveDir+'\\'+SimulationNames3D[i]+'_u.bin'
    %              v_file = saveDir+'\\'+SimulationNames3D[i]+'_v.bin'
    %              w_file = saveDir+'\\'+SimulationNames3D[i]+'_w.bin'
    %
    %              if os.path.isfile(u_file)&os.path.isfile(v_file)&os.path.isfile(w_file):
    %                 print('Turbulence box with seed = ' +str(Seeds[i])+ ' already exists, '+str(len(Seeds)-i-1)+' seeds left.')
    %                 ErrorSat = 0
    %                 ErrorMessage = 'No error detected!'
    %              else:
    %
    %                  % call exe
    %                  os.chdir(fileDir)
    %                  print('Simulating with Mann Turbulence Generator')
    %                  SimState = subprocess.call(fileDir+'run.bat')
    %                  if SimState == 0 :
    %                     ErrorSat = 0
    %                     ErrorMessage = 'No error detected!'
    %                     print('Turbulence simulation with seed = '+str(Seeds[i])+' finished, '+str(len(Seeds)-i-1)+' seeds left.')
    %
    %                     % move simulated results to the target folder
    %                     shutil.move(SimulationNames3D[i]+'_u.bin', saveDir)
    %                     shutil.move(SimulationNames3D[i]+'_v.bin', saveDir)
    %                     shutil.move(SimulationNames3D[i]+'_w.bin', saveDir)
    %
    %                  else:
    %                     print("Turbulence simulation failed, check the error by running the 'run.bat' manually")
    %                     ErrorSat = 1
    %                     ErrorMessage = "Turbulence simulation failed, check the error by running the 'run.bat' manually"
    %                  os.chdir(os.path.abspath(os.path.dirname(os.getcwd())))   %back to upper folder
    



